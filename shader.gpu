

// Vertex shader
const vertexShaderSource = `
attribute vec3 vertex;
attribute vec2 texture;
uniform mat4 ModelViewProjectionMatrix;

varying vec2 v_texcoord;

uniform vec3 translateUP;
uniform vec2 userPoint;
uniform float rotA;


void main() {
    v_texcoord=texture;
    vec4 vertPos4 = ModelViewProjectionMatrix * vec4(vertex, 1.0);
    gl_Position = vertPos4;
}`;


// Fragment shader
const fragmentShaderSource = `
#ifdef GL_FRAGMENT_PRECISION_HIGH
   precision highp float;
#else
   precision mediump float;
#endif

varying vec2 v_texcoord;
uniform sampler2D tmu;
uniform float scl;

void main() {
    vec4 texColor = texture2D(tmu, v_texcoord);
    gl_FragColor = texColor;
    if(scl<0.0){
        gl_FragColor = vec4(0.,0.,0.,0.);
    }
}`;